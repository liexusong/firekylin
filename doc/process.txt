Firekylin中进程的实现。

进程：一个进程是一个执行流，在系统中可以存在多个进程。

进程树模型：
   在系统中进程会被组织为树模型。进程使用系统调用fork通过复制自己产生一个新进程，新产生的进程为子进程，原进程为父进程。
   在系统初始化完成后，手动创建进程0即对换进程（idle进程），对换进程通过fork系统调用产生进程1（init 进程），
 init进程是系统中其他所用进程的父进程。

进程组：多个进程组成进程组，一个进程组中可以包含一个或多个进程，一个进程组，为一个用户作用，是作用控制的一部分。

会话： 系统中包含两种会话，
    登录会话：具有控制终端。会话中的所有进程，属于当前登录用户。当用户退出登录时，将杀死此会话内的所有进程。
    守护进程：守护进程及其子进程处于一个会话当中，没用控制终端，属于特殊的系统用户。一般随着系统启动而启动，系统关闭而终止，
                       用户的登录和注销对守护进程没有基本没有什么影响。

进程状态：
    就绪态（ready）：可能是当前cpu正在执行的进程，或者是等待调度即可进入运行。
    阻塞态（block）：进程在等待一个资源，当等待的资源可用时，被唤醒。
    暂停态（pause）：进程等待一个信号，当有一个信号到达时，被唤醒。
    停止态（stop）： 进程可以因一些事件而传唤为停止态，当接收到SIGCONT信号时，转换为就绪态，用于作用控制和进程调试。
    终止态（exit）：进程调用exit系统调用，可以进程退出，处于退出态。

    内核态：进程运行在内核态，执行内核代码，可能由于系统调用，中断和异常引起陷入，进程由用户态切换到内核态。
    用户态：进程运行在用户态，执行用户空间代码。

进程控制块：记录了一个进程所占有的资源，是进程控制的基础。

